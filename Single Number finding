
//https://leetcode.com/problems/single-number/
Solution with bit manipulation:

class Solution {
public:
    int singleFinder(vector<int>& num)
    {
        int res=0;
        for(int i=0; i<num.size(); i++)
        {
            res=res^num[i];
        }
        return res;
    }
    int singleNumber(vector<int>& nums) {
        int result=singleFinder(nums);
        return result;
    }
};
Solution without bit manipulation: 
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int flag=0;
        sort(nums.begin(),nums.end());
        int result=nums[nums.size()-1];
      for (int i = 0; i< nums.size()-1;)
      {

          if(nums[i]!=nums[i+1])
          {
              //cout<<nums[i];
              result=nums[i];
              flag=1;
              break;

          }
            i=i+2;
      }
       return result;

    }
};
